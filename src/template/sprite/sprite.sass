// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$comment-quesiton-name: 'comment-quesiton'
$comment-quesiton-x: 78px
$comment-quesiton-y: 0px
$comment-quesiton-offset-x: -78px
$comment-quesiton-offset-y: 0px
$comment-quesiton-width: 29px
$comment-quesiton-height: 27px
$comment-quesiton-total-width: 107px
$comment-quesiton-total-height: 70px
$comment-quesiton-image: 'sprite.png'
$comment-quesiton: (78px, 0px, -78px, 0px, 29px, 27px, 107px, 70px, 'sprite.png', 'comment-quesiton', )
$comment-question-big-name: 'comment-question-big'
$comment-question-big-x: 0px
$comment-question-big-y: 0px
$comment-question-big-offset-x: 0px
$comment-question-big-offset-y: 0px
$comment-question-big-width: 78px
$comment-question-big-height: 58px
$comment-question-big-total-width: 107px
$comment-question-big-total-height: 70px
$comment-question-big-image: 'sprite.png'
$comment-question-big: (0px, 0px, 0px, 0px, 78px, 58px, 107px, 70px, 'sprite.png', 'comment-question-big', )
$doc-name: 'doc'
$doc-x: 78px
$doc-y: 27px
$doc-offset-x: -78px
$doc-offset-y: -27px
$doc-width: 23px
$doc-height: 27px
$doc-total-width: 107px
$doc-total-height: 70px
$doc-image: 'sprite.png'
$doc: (78px, 27px, -78px, -27px, 23px, 27px, 107px, 70px, 'sprite.png', 'doc', )
$quote-name: 'quote'
$quote-x: 0px
$quote-y: 58px
$quote-offset-x: 0px
$quote-offset-y: -58px
$quote-width: 18px
$quote-height: 12px
$quote-total-width: 107px
$quote-total-height: 70px
$quote-image: 'sprite.png'
$quote: (0px, 58px, 0px, -58px, 18px, 12px, 107px, 70px, 'sprite.png', 'quote', )
$spritesheet-width: 107px
$spritesheet-height: 70px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($comment-quesiton, $comment-question-big, $doc, $quote, )
$spritesheet: (107px, 70px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
